```{r, include=F, warning=F, message=F}
library(tidyverse); library(here); library(ggthemes)
library(viridis); library(tidybayes); library(wesanderson)
library(ggdist); library(patchwork); library(extrafont)
library(parallel); library(deSolve); library(tmvtnorm)
library(fdrtool); library(readxl); library(here); library(easystats)
library(RColorBrewer); library(devtools); library(car); library(plotly)
library(knitr); library(Hmisc); library(nlstools); library(lsmeans)
library(ggpubr); library(gridExtra) ;
library(modelsummary);
library(plan); library(brms); library(ggmcmc); library(latex2exp);
library(reshape2); library(ggbreak); library(nord); library(ggtext); 
library(kableExtra); library(DT); library(glmmTMB); library(priorsense); 
#library(renv)

sizetitle <- 12

Nord_frost <- nord(palette = "frost")
Nord_polar <- nord(palette = "polarnight")

col_blue <- "#5E81AC"
col_red <- "#f42404"
pal_col <- c(col_blue, col_red)

pal_blue <- c("#5E81AC", "#7F9DC4", "#A0C1D9", "#DCE9F2")
pal_red <- c("#f42404", "#F65E4B", "#F6876D", "#FBD3D0")  
```

# Supplementary information

```{r, warning=F, message=F}

df_growth <- read_excel(here::here("data/Data_growth_EPX_DMX.xlsx"), sheet="Growth") # <1>

dead <- subset(df_growth, t==14 & status == "D")$ID 
                                                                         # <2>
df_growth <- df_growth |> 
  subset((!ID %in% dead)) |>                                      # <3>
  mutate(
    L            = w^(1/3),
    exposition   = 0 + 1*(exposition == "Trt"),
    exposition_f = as.factor(exposition)
    )

df_growth$exposition <- as.factor(df_growth$exposition)
df_growth$ID <- as.factor(df_growth$ID)

df_growth_mean <- df_growth |>                                           # <6>
  aggregate(w ~ t + exposition, mean)                                    # <6>

# Number of individuals in each group
n_ctrl <- length(subset(df_growth, t==0 & exposition == 0)$ID)
n_trt <- length(subset(df_growth, t==0 & exposition == 1)$ID)

```

## Choice of the model

### Linearisation of growth

We tested 2 different types of linearisation of growth :

1.  The original model with $L=W^{1/3}$
2.  A model where $L=\text{Ln}(W)$

```{r}
#| code-fold: show

df_growth_Ln <- df_growth |> 
  mutate(L=log(w))
```

```{r}
#| code-fold: show

bf.mod.VI <-
  bf(
    L  ~ L0+a*t,
    L0 ~ 1 + (1||ID),
    a  ~ 0 + exposition+(0+exposition||ID),

    center=T,
    nl=T
  )

bf.mod.Ln <-
  bf(
    L  ~ L0+a*t,
    L0 ~ 1 + (1||ID),
    a  ~ 0 + exposition+(0+exposition||ID),

    center=T,
    nl=T
  )
```

We use the same priors as in #sec-Dpriors.

```{r}
#| code-fold: show

# Priors definition
priors <- 
  prior(normal(2.25, 0.45), class = b, nlpar = L0, lb = 0) +
  prior(normal(2.25*0.2, 2.25*0.2), class = sd, nlpar = L0)+

  prior(normal(0.075, 0.015), class=b, coef=exposition0, nlpar = a) +
  prior(normal(0.075, 0.015), class=b, coef=exposition1, nlpar = a) +

  prior(normal(0.075*0.2, 0.075*0.2), class=sd,
        coef=exposition0, group=ID, nlpar = a)+
  prior(normal(0.075*0.2, 0.075*0.2), class=sd,
        coef=exposition1, group=ID, nlpar = a)+

  prior(exponential(1), sigma)
```

```{r}
#| code-fold: show

m.1.VI.post <- 
  
  brm(
    data = df_growth,
    bf.mod.VI,
    backend = "cmdstanr",
    prior = priors,
    save_pars = save_pars(all = TRUE),
    sample_prior = "yes",
    seed = 42,
    chains = 4, cores = 4,
    iter = 6000, warmup = 1000,
    control = list(adapt_delta = .95,
    max_treedepth = 12),
    file=here::here("mod/m_brms_VI_post")
  )

m.1.Ln.post <- 
  
  brm(
    data = df_growth_Ln,
    bf.mod.Ln,
    backend = "cmdstanr",
    prior = priors,
    save_pars = save_pars(all = TRUE),
    sample_prior = "yes",
    seed = 42,
    chains = 4, cores = 4,
    iter = 6000, warmup = 1000,
    control = list(adapt_delta = .95,
    max_treedepth = 12),
    file=here::here("mod/m_brms_Ln_post")
  )
```

```{r, message=F, warning=F}
p1 <- pp_check(m.1.VI.post, ndraws = 100) +
  scale_color_manual(values = c(Nord_polar[1], Nord_frost[3]))
p2 <- pp_check(m.1.Ln.post, ndraws = 100)+
  scale_color_manual(values = c(Nord_polar[1], Nord_frost[3]))
p <- p1+p2+
  plot_layout(ncol = 2) & 
  theme_minimal()

p
```

The fit from both model are similar so the first model was kept.

### Test of different model parametrization

Different models were tested to chose the appropriate model. We tested the inclusion of individual variation and of a correlation between $L0$ and $a$.

```{r compmoddef}
#| code-fold: show

# Null model
bf.mod.null <- bf(
  L ~ L0+a*t,
  L0~1,
  a~1,
  
  center=T,
  nl=T
  )

# Individual variation in growth rate, not depending on exposition
bf.mod.VI.noexpo <- bf(
  L ~ L0+a*t,
  L0~1+(1||ID),
  a~1+(1||ID),
  
  center=T,
  nl=T
  )

# Effect of the pesticide on mean growth rate, no individual variation
bf.mod.expo <- bf(
  L ~ L0+a*t,
  L0~1,
  a~0+exposition,
  
  center=T,
  nl=T
  )

# Addition of inter-individual variation in growth rate, depending on exposition
# bf.mod.VI (Defined above)

# Addition of a correlation between initial length and growth rate
bf.mod.VI.cor <- bf(
  L ~ L0+a*t,
  L0~1+(1|c|ID),
  a~0+exposition+(0+exposition|c|ID),

  center=T,
  nl=T
  )
```

We use the same priors for all models.

```{r priorscompmod}
#| code-fold: show

priors.null <- prior(normal(2.25, 0.45), class = b, nlpar = L0, lb = 0) +
  # Mean values of a 
  prior(normal(0.075, 0.015), class=b, nlpar = a) +
  # Résidus
  prior(exponential(1), sigma)

priors.VI.noexpo <- prior(normal(2.25, 0.45), class = b, nlpar = L0, lb = 0) + 
  prior(normal(2.25*0.2, 2.25*0.2), class = sd, nlpar = L0)+
  # Mean values of a for the two cohorts
  prior(normal(0.075, 0.015), class=b, nlpar = a) + 
  # Individual variations values of a for the two cohorts
  prior(normal(0.075*0.2, 0.075*0.2), class=sd, group=ID, nlpar = a)+
  # Résidus
  prior(exponential(1), sigma)

priors.expo <- prior(normal(2.25, 0.45), class = b, nlpar = L0, lb = 0) +
  # Mean values of a for the two cohorts
  prior(normal(0.075, 0.015), class=b, coef=exposition0, nlpar = a) + 
  prior(normal(0.075, 0.015), class=b, coef=exposition1, nlpar = a) + 
  # Résidus
  prior(exponential(1), sigma)

priors.VI.cor <- prior(normal(2.25, 0.45), class = b, nlpar = L0, lb = 0) + 
  prior(normal(2.25*0.2, 2.25*0.2), class = sd, nlpar = L0)+
  # Mean values of a for the two cohorts
  prior(normal(0.075, 0.015), class=b, coef=exposition0, nlpar = a) + 
  prior(normal(0.075, 0.015), class=b, coef=exposition1, nlpar = a) + 
  # Individual variations values of a for the two cohorts
  prior(normal(0.075*0.2, 0.075*0.2), class=sd, 
        coef=exposition0, group=ID, nlpar = a)+
  prior(normal(0.075*0.2, 0.075*0.2), class=sd, 
        coef=exposition1, group=ID, nlpar = a)+
  # Default prior for correlations
  # Résidus
  prior(exponential(1), sigma)

```

```{r compmodrun}

m.1 <- brm(
  data = df_growth, 
  bf.mod.null, 
  backend = "cmdstanr",
  prior = priors.null,
  save_pars = save_pars(all = TRUE),
  sample_prior = "yes",
  seed = 42,
  chains = 4, cores = 4,
  iter = 6000, warmup = 1000,
  control = list(
    adapt_delta = .95,
    max_treedepth = 12
    ),
  file=here::here("mod/model_choice/m.1")
  )

m.2 <- brm(
  data = df_growth, 
  bf.mod.VI.noexpo, 
  backend = "cmdstanr",
  prior = priors.VI.noexpo,
  save_pars = save_pars(all = TRUE),
  sample_prior = "yes",
  seed = 42,
  chains = 4, cores = 4,
  iter = 6000, warmup = 1000,
  control = list(
    adapt_delta = .95,
    max_treedepth = 12
    ),
  file=here::here("mod/model_choice/m.2")
  )

m.3 <- brm(
  data = df_growth, 
  bf.mod.expo, 
  backend = "cmdstanr",
  prior = priors.expo,
  save_pars = save_pars(all = TRUE),
  sample_prior = "yes",
  seed = 42,
  chains = 4, cores = 4,
  iter = 6000, warmup = 1000,
  control = list(
    adapt_delta = .95,
    max_treedepth = 12
    ),
  file=here::here("mod/model_choice/m.3")
  )

m.4 <- m.1.VI.post

m.5 <- brm(
  data = df_growth, 
  bf.mod.VI.cor, 
  backend = "cmdstanr",
  prior = priors.VI.cor,
  save_pars = save_pars(all = TRUE),
  sample_prior = "yes",
  seed = 42,
  chains = 4, cores = 4,
  iter = 6000, warmup = 1000,
  control = list(
    adapt_delta = .95,
    max_treedepth = 12
    ),
  file=here::here("mod/model_choice/m.5")
  )

```

```{r, warning=F, message=F}

m.1 <- add_criterion(m.1, criterion=c("waic", "loo"))
m.2 <- add_criterion(m.2, criterion=c("waic", "loo"))
m.3 <- add_criterion(m.3, criterion=c("waic", "loo"))
m.4 <- add_criterion(m.4, criterion=c("waic", "loo"))
m.5 <- add_criterion(m.5, criterion=c("waic", "loo"))
```

::: panel-tabset
## WAIC comparison

```{r compmodwaic, warning=F, message=F}
#| fig-cap: WAIC comparison plot of all tested models. 
#| label: fig-waicplot
#| fig-height: 4
#| fig-width: 6

w <- loo_compare(m.1, m.2, m.3, m.4, m.5, criterion = "waic")

#print(w, simplify = F)
cbind(waic_diff = w[, 1] * -2,
      se        = w[, 2] * 2)

plot <- w[, 7:8] %>% 
  data.frame() %>% 
  rownames_to_column("model_name") %>% 
  ggplot(
    aes(
      x = waic, 
      y = model_name, 
      xmin = waic - se_waic, 
      xmax = waic + se_waic)
    ) +
  geom_pointrange(
    color = pal_col[2], 
    fill = pal_col[2], 
    shape = 21, 
    alpha=0.7
    ) +
  labs(
    title = "My custom WAIC plot",
    x = NULL, 
    y = NULL
    ) +
  theme_bw()+
  theme(axis.ticks.y = element_blank())


plot

```

## LOO comparison

```{r compmodloo}
#| fig-cap: LOO comparison plot of all tested models. 
#| label: fig-looplot
#| fig-height: 4
#| fig-width: 6

w <- loo_compare(m.1, m.2, m.3, m.4, m.5, criterion = "loo")


#print(w, simplify = F)
cbind(waic_diff = w[, 1] * -2,
      se        = w[, 2] * 2)

plot <- w[, 7:8] %>% 
  data.frame() %>% 
  rownames_to_column("model_name") %>% 
  ggplot(
    aes(
      x = looic, 
      y = model_name,
      xmin = looic - se_looic, 
      xmax = looic + se_looic
      )
    ) +
  geom_pointrange(
    color = pal_col[2], 
    fill = pal_col[2], 
    shape = 21
    ) +
  labs(
    title = "My custom LOO plot",
    x = NULL, 
    y = NULL
    ) +
  theme_bw()+
  theme(axis.ticks.y = element_blank())

plot
```
:::

## Checking priors sensitivity

```{r}
#| tbl-cap: Priors sensitivity

tbl_powerscale_sens <- powerscale_sensitivity(
  m.4,
  variable = c(
    "b_a_exposition0",
    "b_a_exposition1",
    "sd_ID__a_exposition0",
    "sd_ID__a_exposition1"
    )
  )


tbl_powerscale_sens |> 
  DT::datatable(
    options = list(dom = 't'), 
    class="hover", 
    rownames=FALSE
    )
```

::: panel-tabset
## Plot dens

```{r}
#| fig-cap: Priors sensitivity.
#| fig-height: 6
#| fig-width: 10

# A very heavy object (4.5 GB)

# p_dens <- powerscale_plot_dens(
#   m.4,
#   variable = c(
#     "b_a_exposition0",
#     "b_a_exposition1",
#     "sd_ID__a_exposition0",
#     "sd_ID__a_exposition1"
#     )
#   )+
#   theme_minimal()
# 
# ggsave(
#   filename="Plot_priors_sensitivity_2.png",
#   plot=p_dens,
#   width=10, height = 6,
#   path=here::here("fig/")
#   )

knitr::include_graphics(here::here("fig/Plot_priors_sensitivity_2.png"))
```

## plot ecdf

```{r}
#| fig-cap: Priors sensitivity.
#| fig-height: 6
#| fig-width: 10

# Another very heavy object

# p_ecdf <- powerscale_plot_ecdf(
#   m.4,
#   variable = c(
#     "b_a_exposition0", 
#     "b_a_exposition1",
#     "sd_ID__a_exposition0", 
#     "sd_ID__a_exposition1"
#     )
#   )+
#   theme_minimal()
# 
# ggsave(
#   filename="Plot_priors_sensitivity_1.png",
#   plot=p_ecdf,
#   width=10, height = 6,
#   path=here::here("fig/")
#   )

knitr::include_graphics(here::here("fig/Plot_priors_sensitivity_1.png"))
```

## Plot quantities

```{r}
#| fig-cap: Priors sensitivity.
#| fig-height: 6
#| fig-width: 10

# Another very heavy object

p_quant <- powerscale_plot_quantities(
  m.4,
  variable = c(
    "b_a_exposition0", 
    "b_a_exposition1",
    "sd_ID__a_exposition0", 
    "sd_ID__a_exposition1"
    )
  )

ggsave(
  filename="Plot_priors_sensitivity_3.png",
  plot=p_quant,
  width=10, height = 6,
  path=here::here("fig/")
  )

knitr::include_graphics(here::here("fig/Plot_priors_sensitivity_3.png"))

```
:::

## Comparison with a frequentist approach

### Frequentist LMMs using glmmTMB

```{r freq}

# Model with no effect between cohorts
glmmTMB.null = glmmTMB(
  L ~ t , 
  df_growth
  )
# Model with the effect of the pesticide only
glmmTMB.trt <-  glmmTMB(
  L ~ exposition * t, 
  df_growth
  )
# Model with only inter-individual variation
glmmTMB.vi <-  glmmTMB(
  L ~  t + (t|ID), 
  df_growth
  )
# Model with the effect of the pesticide and inter-individual variation not depending on exposition
glmmTMB.trt.vi <-  glmmTMB(
  L ~  exposition * t + (t|ID), 
  df_growth
  )
# Model with the effect of the pesticide and inter-individual variation depending on exposition
glmmTMB.trt.vi.2 <-  glmmTMB(
  L ~ exposition * t + (exposition * t || ID), 
  df_growth
  )
```

:::::::: panel-tabset
## Null model

::: panel-tabset
### Model summary

```{r}
#| tbl-cap: Model summary

modelsummary(glmmTMB.null)

```

### Assumption check

```{r}
#| fig-cap: Check assumptions
#| fig-width: 10
#| fig-height: 10

check_model(glmmTMB.null)
```

### Estimates plot

```{r}
#| fig-cap: Estimates of the model
#| fig-width: 6
#| fig-height: 4

modelplot(glmmTMB.null, color = pal_col[1])
```
:::

## Effect of pesticides only

::: panel-tabset
### Model summary

```{r}
#| tbl-cap: Model summary

modelsummary(glmmTMB.trt)

```

### Assumption check

```{r}
#| fig-cap: Check assumptions
#| fig-width: 10
#| fig-height: 10

check_model(glmmTMB.trt)
```

### Estimates plot

```{r}
#| fig-cap: Estimates of the model
#| fig-width: 6
#| fig-height: 4

modelplot(glmmTMB.trt, color = pal_col[1])
```
:::

## Individual variation only

::: panel-tabset
### Model summary

```{r}
#| tbl-cap: Model summary

modelsummary(glmmTMB.vi)

```

### Assumption check

```{r}
#| fig-cap: Check assumptions
#| fig-width: 10
#| fig-height: 10

check_model(glmmTMB.vi)
```

### Estimates plot

```{r}
#| fig-cap: Estimates of the model
#| fig-width: 6
#| fig-height: 4

modelplot(glmmTMB.vi, color = pal_col[1])
```
:::

## Effect of pesticides and individual variation (not depending on exposition)

::: panel-tabset
### Model summary

```{r}
#| tbl-cap: Model summary

modelsummary(glmmTMB.trt.vi)

```

### Assumption check

```{r}
#| fig-cap: Check assumptions
#| fig-width: 10
#| fig-height: 10

check_model(glmmTMB.trt.vi)
```

### Estimates plot

```{r}
#| fig-cap: Estimates of the model
#| fig-width: 6
#| fig-height: 4

modelplot(glmmTMB.trt.vi, color = pal_col[1])
```
:::

## Effect of pesticides and individual variation (depending on exposition)

::: panel-tabset
### Model summary

```{r}
#| tbl-cap: Model summary

modelsummary(glmmTMB.trt.vi.2)

```

### Assumption check

```{r}
#| fig-cap: Check assumptions
#| fig-width: 10
#| fig-height: 10

check_model(glmmTMB.trt.vi.2)
```

### Estimates plot

```{r}
#| fig-cap: Estimates of the model
#| fig-width: 6
#| fig-height: 4

modelplot(glmmTMB.trt.vi.2, color = pal_col[1])
```
:::
::::::::

```{r AICfreq}
# AIC model comparison
compare_performance(
  glmmTMB.null, glmmTMB.trt, glmmTMB.vi, glmmTMB.trt.vi, glmmTMB.trt.vi.2,
  rank = TRUE, 
  verbose = FALSE
  )
```

```{r}
#| fig-cap: Comparison of the frequentist models
#| fig-width: 6
#| fig-height: 4

plot(
  compare_performance(
    glmmTMB.null, 
    glmmTMB.trt, 
    glmmTMB.vi, 
    glmmTMB.trt.vi, 
    glmmTMB.trt.vi.2,
    rank = TRUE, 
    verbose = FALSE
    )
  )
```

### Frequentist vs. Bayesian coefficients comparison

```{r}
models <- list(
  "null.f" = glmmTMB.null,
  "null.b" = m.1,
  "trt.f" = glmmTMB.trt,
  "trt.b" = m.3,
  "vi.f" = glmmTMB.vi,
  "vi.b" = m.2,
  "trt.vi.f" = glmmTMB.trt.vi,
  "trt.vi.b" = m.4
  )
```

```{r , warning=F, message=F}
#| tbl-cap: Comparison of the frequentist vs. Bayesian model coefficients

# tb_freqbaycomp <- modelsummary(models, statistic = 'conf.int')
# save(tb_freqbaycomp, file = here::here("mod/model_choice/Table_coef_freq_vs_bayes.rds"))
load(here::here("mod/model_choice/Table_coef_freq_vs_bayes.rds"))
tb_freqbaycomp
```

::: panel-tabset
## Null models

```{r}
#| fig-cap: Comparison of the null models
#| fig-height: 4
#| fig-width: 6

modelplot(models[1:2])+
  scale_color_manual(values = pal_col)
```

## Models with pesticides effect

```{r}
#| fig-cap: Comparison of the models with pesticides effect
#| fig-height: 4
#| fig-width: 6

modelplot(models[3:4])+
  scale_color_manual(values = pal_col)
```

## Models with individual variation

```{r}
#| fig-cap: Comparison of the models with individual variation
#| fig-height: 4
#| fig-width: 6

modelplot(models[5:6])+
  scale_color_manual(values = pal_col)
```

## Models with pesticides effect and individual variation

```{r}
#| fig-cap: Comparison of the models with pesticides effect and individual variation
#| fig-height: 4
#| fig-width: 6

modelplot(models[7:8])+
  scale_color_manual(values = pal_col)
```
:::

<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">

<b> Session Information </b>

</button>

:::: {#collapseOne .accordion-collapse .collapse}
<div>

```{r}
sessionInfo()
```

</div>
::::
