{
  "hash": "9d665cf37cbf86aaad4637432d02a50a",
  "result": {
    "engine": "knitr",
    "markdown": "\n\n\n\n\n\n# Can we ignore individual differences? Bias, type M and type S errors in OECD guidelines using a simulation study\n\nWe also sought to assess the accuracy of our inference if we had followed a typical biotest design for Environmental Risk Assessment (ERA). The standardized earthworm reproduction test of the OECD (TG nÂ°222), which also assesses growth effects, recommends four replicates per treatment and eight replicates for the control condition, with each replicate containing 10 earthworms. To simulate this design, we used the results of our growth model to generate growth data for 500 individuals. Using this simulated dataset, we performed a bootstrap procedure with 1,000 iterations using the same model as the one used to analyse our experimental data. Each iteration corresponded to an experimental design adhering to the OECD TG 222 guidelines, where individuals were randomly assigned to replicates according to the recommended structure. This approach allowed us to estimate the variability and potential biases in parameter inference under the constraints of a typical ERA experimental design. This approach allowed us to calculate the Type M (magnitude) and Type S (sign) errors on the effect estimation, providing insights into the reliability and accuracy of the inferred parameters under the constraints of a typical ERA experimental design.\n\nThe R file used and the corresponding results are available in the `bootstrap` folder. The script ran on a Macbook Air M2 for about 24 hours.\n\nWe start by loading the results of our previous model with all the 30 replicates per groups for comparison :\n\n\n\n\n\n::: {#tbl-resmod30ind .cell tbl-cap='Results summary of the model with 30 individuals in each group'}\n\n```{.r .cell-code  code-fold=\"show\"}\nm.30 <- brm(file=here::here(\"mod/m_brms_VI_post\"))\nres_30 <- as.data.frame(posterior_summary(m.30))\n\nL0_est30       <- res_30$Estimate[1]\na_ctrl_est30   <- res_30$Estimate[2]\na_trt_est30    <- res_30$Estimate[3]\nL0sd_est30     <- res_30$Estimate[4]\nasd_ctrl_est30 <- res_30$Estimate[5]\nasd_trt_est30  <- res_30$Estimate[6]\n\neffect_est30   <- a_trt_est30/a_ctrl_est30\neffectsd_est30 <- asd_trt_est30/asd_ctrl_est30\n\nres_show <- res_30[1:7,]|> \n  mutate(across(everything(), ~ signif(.x, digits = 2))) |> \n  datatable(options = list(dom = 't'), class=\"hover\") \nres_show\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-6b9c1d2635660699a54a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6b9c1d2635660699a54a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"b_L0_Intercept\",\"b_a_exposition0\",\"b_a_exposition1\",\"sd_ID__L0_Intercept\",\"sd_ID__a_exposition0\",\"sd_ID__a_exposition1\",\"sigma\"],[2.2,0.083,0.074,0.22,0.008800000000000001,0.029,0.29],[0.043,0.0021,0.0054,0.046,0.0018,0.0048,0.016],[2.1,0.079,0.063,0.13,0.0057,0.021,0.26],[2.3,0.08699999999999999,0.08500000000000001,0.31,0.013,0.04,0.32]],\"container\":\"<table class=\\\"hover\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Estimate<\\/th>\\n      <th>Est.Error<\\/th>\\n      <th>Q2.5<\\/th>\\n      <th>Q97.5<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Estimate\",\"targets\":1},{\"name\":\"Est.Error\",\"targets\":2},{\"name\":\"Q2.5\",\"targets\":3},{\"name\":\"Q97.5\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\nWe can then load the results of the bootstrap :\n\n\n\n\n\n::: {#tbl-resOECDindboot .cell tbl-cap='6 first line of the bootstrap result'}\n\n```{.r .cell-code  code-fold=\"show\"}\nload(file=here::here(\"bootstrap/Bootstrap_VI_OECD_seed121212_28j_OK_f.RData\"))\n\ndf_draws <- res_f\n\ndf_draws_show <- df_draws[1:4] |> \n  mutate(across(everything(), ~ signif(.x, digits = 2))) |> \n  datatable(options = list(dom = 't'), class=\"hover\", rownames=FALSE) \ndf_draws_show\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e4826f8e579c472e82eb\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e4826f8e579c472e82eb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,110,110,110,110,110,110,110,110,110,120,120,120,120,120,120,120,120,120,120,120,130,130,130,130,130,130,130,130,130,140,140,140,140,140,140,140,140,140,140,140,150,150,150,150,150,150,150,150,150,160,160,160,160,160,160,160,160,160,160,160,170,170,170,170,170,170,170,170,170,180,180,180,180,180,180,180,180,180,180,180,190,190,190,190,190,190,190,190,190,200,200,200,200,200,200,200,200,200,200,200,210,210,210,210,210,210,210,210,210,220,220,220,220,220,220,220,220,220,220,220,230,230,230,230,230,230,230,230,230,240,240,240,240,240,240,240,240,240,240,240,250,250,250,250,250,250,250,250,250,260,260,260,260,260,260,260,260,260,260,260,270,270,270,270,270,270,270,270,270,280,280,280,280,280,280,280,280,280,280,280,290,290,290,290,290,290,290,290,290,300,300,300,300,300,300,300,300,300,300,300,310,310,310,310,310,310,310,310,310,320,320,320,320,320,320,320,320,320,320,320,330,330,330,330,330,330,330,330,330,340,340,340,340,340,340,340,340,340,340,340,350,350,350,350,350,350,350,350,350,360,360,360,360,360,360,360,360,360,360,360,370,370,370,370,370,370,370,370,370,380,380,380,380,380,380,380,380,380,380,380,390,390,390,390,390,390,390,390,390,400,400,400,400,400,400,400,400,400,400,400,410,410,410,410,410,410,410,410,410,420,420,420,420,420,420,420,420,420,420,420,430,430,430,430,430,430,430,430,430,440,440,440,440,440,440,440,440,440,440,440,450,450,450,450,450,450,450,450,450,460,460,460,460,460,460,460,460,460,460,460,470,470,470,470,470,470,470,470,470,480,480,480,480,480,480,480,480,480,480,480,490,490,490,490,490,490,490,490,490,500,500,500,500,500,500,500,500,500,500,500,510,510,510,510,510,510,510,510,510,520,520,520,520,520,520,520,520,520,520,520,530,530,530,530,530,530,530,530,530,540,540,540,540,540,540,540,540,540,540,540,550,550,550,550,550,550,550,550,550,560,560,560,560,560,560,560,560,560,560,560,570,570,570,570,570,570,570,570,570,580,580,580,580,580,580,580,580,580,580,580,590,590,590,590,590,590,590,590,590,600,600,600,600,600,600,600,600,600,600,600,610,610,610,610,610,610,610,610,610,620,620,620,620,620,620,620,620,620,620,620,630,630,630,630,630,630,630,630,630,640,640,640,640,640,640,640,640,640,640,640,650,650,650,650,650,650,650,650,650,660,660,660,660,660,660,660,660,660,660,660,670,670,670,670,670,670,670,670,670,680,680,680,680,680,680,680,680,680,680,680,690,690,690,690,690,690,690,690,690,700,700,700,700,700,700,700,700,700,700,700,710,710,710,710,710,710,710,710,710,720,720,720,720,720,720,720,720,720,720,720,730,730,730,730,730,730,730,730,730,740,740,740,740,740,740,740,740,740,740,740,750,750,750,750,750,750,750,750,750,760,760,760,760,760,760,760,760,760,760,760,770,770,770,770,770,770,770,770,770,780,780,780,780,780,780,780,780,780,780,780,790,790,790,790,790,790,790,790,790,800,800,800,800,800,800,800,800,800,800,800,810,810,810,810,810,810,810,810,810,820,820,820,820,820,820,820,820,820,820,820,830,830,830,830,830,830,830,830,830,840,840,840,840,840,840,840,840,840,840,840,850,850,850,850,850,850,850,850,850,860,860,860,860,860,860,860,860,860,860,860,870,870,870,870,870,870,870,870,870,880,880,880,880,880,880,880,880,880,880,880,890,890,890,890,890,890,890,890,890,900,900,900,900,900,900,900,900,900,900,900,910,910,910,910,910,910,910,910,910,920,920,920,920,920,920,920,920,920,920,920,930,930,930,930,930,930,930,930,930,940,940,940,940,940,940,940,940,940,940,940,950,950,950,950,950,950,950,950,950,960,960,960,960,960,960,960,960,960,960,960,970,970,970,970,970,970,970,970,970,980,980,980,980,980,980,980,980,980,980,980,990,990,990,990,990,990,990,990,990,1000,1000,1000,1000,1000,1000],[2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.3,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.3,2.3,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.1,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.2,2.2,2.3,2.2],[0.08400000000000001,0.082,0.08599999999999999,0.08,0.08500000000000001,0.08400000000000001,0.082,0.083,0.08400000000000001,0.08500000000000001,0.082,0.083,0.08400000000000001,0.08,0.081,0.082,0.082,0.083,0.082,0.08400000000000001,0.08599999999999999,0.082,0.082,0.082,0.08400000000000001,0.08400000000000001,0.083,0.083,0.082,0.08,0.083,0.082,0.08599999999999999,0.082,0.083,0.083,0.082,0.082,0.082,0.081,0.082,0.082,0.083,0.083,0.082,0.082,0.08400000000000001,0.083,0.08400000000000001,0.081,0.081,0.08400000000000001,0.08,0.08599999999999999,0.082,0.08500000000000001,0.082,0.083,0.082,0.083,0.082,0.081,0.083,0.083,0.083,0.08400000000000001,0.08400000000000001,0.082,0.08,0.081,0.081,0.08500000000000001,0.083,0.081,0.083,0.081,0.083,0.08400000000000001,0.08,0.082,0.083,0.081,0.08400000000000001,0.081,0.08,0.081,0.08,0.083,0.082,0.083,0.081,0.08400000000000001,0.083,0.08400000000000001,0.082,0.083,0.083,0.082,0.082,0.082,0.083,0.083,0.081,0.08400000000000001,0.082,0.08500000000000001,0.083,0.083,0.083,0.08,0.081,0.082,0.082,0.08400000000000001,0.082,0.082,0.08400000000000001,0.08400000000000001,0.08400000000000001,0.083,0.083,0.082,0.083,0.081,0.083,0.083,0.082,0.083,0.08400000000000001,0.08400000000000001,0.081,0.08,0.082,0.083,0.081,0.082,0.081,0.083,0.083,0.082,0.081,0.08400000000000001,0.082,0.082,0.082,0.08,0.08,0.08400000000000001,0.081,0.083,0.082,0.08400000000000001,0.08400000000000001,0.083,0.082,0.082,0.08400000000000001,0.081,0.08,0.08400000000000001,0.08400000000000001,0.083,0.081,0.082,0.082,0.08400000000000001,0.081,0.082,0.082,0.08400000000000001,0.083,0.08400000000000001,0.081,0.082,0.08,0.08,0.083,0.081,0.082,0.081,0.082,0.083,0.083,0.082,0.082,0.083,0.083,0.081,0.08,0.081,0.082,0.081,0.081,0.083,0.081,0.081,0.082,0.083,0.082,0.083,0.083,0.082,0.083,0.083,0.081,0.082,0.08,0.082,0.08400000000000001,0.081,0.08500000000000001,0.081,0.081,0.082,0.082,0.082,0.083,0.083,0.082,0.081,0.082,0.081,0.081,0.082,0.082,0.082,0.082,0.083,0.082,0.083,0.082,0.081,0.083,0.082,0.083,0.082,0.081,0.083,0.082,0.082,0.08,0.082,0.083,0.081,0.081,0.082,0.081,0.083,0.082,0.08400000000000001,0.08400000000000001,0.082,0.081,0.08400000000000001,0.083,0.083,0.081,0.081,0.081,0.083,0.08500000000000001,0.083,0.081,0.083,0.08400000000000001,0.08400000000000001,0.082,0.08,0.081,0.081,0.08400000000000001,0.08400000000000001,0.081,0.08400000000000001,0.082,0.082,0.083,0.083,0.081,0.081,0.082,0.082,0.083,0.08,0.083,0.083,0.081,0.082,0.08400000000000001,0.083,0.082,0.081,0.082,0.081,0.083,0.081,0.083,0.082,0.08,0.08400000000000001,0.083,0.081,0.082,0.083,0.083,0.082,0.082,0.08400000000000001,0.08,0.08,0.081,0.082,0.08400000000000001,0.08,0.083,0.082,0.082,0.08400000000000001,0.081,0.081,0.081,0.08500000000000001,0.081,0.08,0.083,0.083,0.083,0.08,0.08400000000000001,0.08400000000000001,0.08400000000000001,0.08400000000000001,0.082,0.083,0.083,0.081,0.081,0.082,0.08400000000000001,0.081,0.082,0.082,0.082,0.08,0.082,0.08400000000000001,0.083,0.081,0.083,0.081,0.08400000000000001,0.082,0.082,0.08500000000000001,0.083,0.08,0.082,0.08400000000000001,0.083,0.083,0.082,0.081,0.082,0.08400000000000001,0.081,0.083,0.08400000000000001,0.081,0.082,0.083,0.082,0.082,0.083,0.083,0.082,0.081,0.081,0.083,0.082,0.08400000000000001,0.08,0.081,0.08400000000000001,0.082,0.083,0.08400000000000001,0.083,0.082,0.082,0.081,0.082,0.08,0.08400000000000001,0.08400000000000001,0.082,0.082,0.08400000000000001,0.083,0.082,0.082,0.081,0.08,0.082,0.08400000000000001,0.08,0.08,0.079,0.081,0.082,0.083,0.082,0.081,0.083,0.081,0.082,0.083,0.082,0.082,0.08,0.083,0.083,0.081,0.082,0.083,0.08400000000000001,0.083,0.08400000000000001,0.083,0.082,0.079,0.08400000000000001,0.081,0.081,0.081,0.082,0.081,0.083,0.083,0.083,0.08500000000000001,0.081,0.08,0.082,0.082,0.083,0.08,0.08400000000000001,0.081,0.082,0.082,0.08,0.08400000000000001,0.082,0.082,0.083,0.082,0.081,0.082,0.081,0.083,0.082,0.081,0.082,0.08,0.083,0.083,0.08400000000000001,0.081,0.081,0.08400000000000001,0.081,0.08400000000000001,0.08500000000000001,0.082,0.082,0.08500000000000001,0.08500000000000001,0.082,0.082,0.082,0.083,0.08400000000000001,0.081,0.082,0.083,0.083,0.082,0.082,0.08400000000000001,0.083,0.083,0.08400000000000001,0.08400000000000001,0.082,0.082,0.078,0.083,0.08400000000000001,0.08,0.08400000000000001,0.081,0.08500000000000001,0.083,0.082,0.083,0.083,0.08400000000000001,0.083,0.081,0.082,0.082,0.083,0.082,0.082,0.081,0.083,0.082,0.08400000000000001,0.082,0.082,0.083,0.08,0.083,0.081,0.082,0.083,0.083,0.083,0.082,0.083,0.082,0.081,0.082,0.08400000000000001,0.081,0.082,0.082,0.082,0.083,0.082,0.083,0.082,0.083,0.08400000000000001,0.082,0.08400000000000001,0.08400000000000001,0.081,0.083,0.082,0.081,0.08400000000000001,0.08400000000000001,0.082,0.081,0.082,0.083,0.083,0.083,0.08,0.082,0.083,0.081,0.082,0.082,0.082,0.08400000000000001,0.083,0.083,0.081,0.083,0.081,0.08400000000000001,0.082,0.081,0.083,0.082,0.083,0.081,0.083,0.083,0.081,0.081,0.08,0.082,0.08400000000000001,0.083,0.082,0.083,0.081,0.08400000000000001,0.081,0.081,0.083,0.08400000000000001,0.081,0.082,0.08500000000000001,0.08,0.08500000000000001,0.083,0.081,0.082,0.082,0.082,0.082,0.081,0.082,0.081,0.082,0.082,0.08400000000000001,0.083,0.083,0.08400000000000001,0.082,0.081,0.082,0.082,0.082,0.082,0.083,0.083,0.081,0.081,0.081,0.082,0.079,0.082,0.083,0.083,0.081,0.083,0.082,0.082,0.08400000000000001,0.081,0.08400000000000001,0.082,0.082,0.083,0.08400000000000001,0.082,0.082,0.082,0.08400000000000001,0.081,0.083,0.08400000000000001,0.081,0.083,0.08400000000000001,0.083,0.083,0.083,0.082,0.08,0.081,0.083,0.082,0.081,0.083,0.082,0.081,0.082,0.083,0.08400000000000001,0.082,0.081,0.083,0.082,0.082,0.083,0.081,0.08400000000000001,0.083,0.083,0.082,0.083,0.081,0.081,0.083,0.082,0.08400000000000001,0.082,0.081,0.083,0.08,0.079,0.081,0.083,0.081,0.08400000000000001,0.08,0.082,0.082,0.08400000000000001,0.083,0.081,0.08500000000000001,0.081,0.081,0.083,0.083,0.082,0.083,0.082,0.082,0.082,0.082,0.082,0.082,0.083,0.082,0.08,0.081,0.083,0.082,0.083,0.08400000000000001,0.082,0.082,0.082,0.08,0.082,0.08400000000000001,0.082,0.083,0.08400000000000001,0.082,0.082,0.079,0.083,0.08400000000000001,0.082,0.08599999999999999,0.083,0.082,0.083,0.083,0.082,0.08400000000000001,0.082,0.082,0.08400000000000001,0.08400000000000001,0.081,0.081,0.08,0.083,0.082,0.08400000000000001,0.083,0.082,0.083,0.081,0.083,0.08500000000000001,0.082,0.083,0.08,0.081,0.08,0.081,0.079,0.082,0.082,0.082,0.081,0.083,0.081,0.083,0.083,0.083,0.081,0.083,0.082,0.081,0.082,0.082,0.081,0.082,0.082,0.082,0.083,0.08400000000000001,0.083,0.081,0.082,0.083,0.083,0.082,0.083,0.081,0.08,0.083,0.083,0.081,0.082,0.08400000000000001,0.083,0.081,0.08400000000000001,0.08,0.08400000000000001,0.082,0.082,0.083,0.083,0.08,0.083,0.083,0.081,0.082,0.08,0.083,0.08500000000000001,0.083,0.083,0.083,0.083,0.083,0.083,0.082,0.081,0.08400000000000001,0.082,0.083,0.081,0.082,0.083,0.082,0.081,0.081,0.083,0.081,0.082,0.081,0.08400000000000001,0.08400000000000001,0.082,0.081,0.081,0.083,0.082,0.08500000000000001,0.08400000000000001,0.08400000000000001,0.081,0.08599999999999999,0.083,0.082,0.083,0.083,0.081,0.081,0.081,0.082,0.082,0.083,0.08,0.083,0.081,0.08400000000000001,0.081,0.082,0.082,0.082,0.083,0.082,0.082,0.081,0.081,0.082,0.08400000000000001,0.081,0.083,0.08400000000000001,0.082,0.082,0.082,0.08,0.082,0.083,0.083,0.08400000000000001,0.08599999999999999,0.079,0.083,0.082,0.082,0.083,0.083,0.083,0.083,0.083,0.079,0.081,0.082,0.083,0.082,0.082,0.082,0.08400000000000001,0.082,0.083,0.083,0.083,0.083,0.083,0.082,0.083,0.082,0.083,0.082,0.082,0.079,0.082,0.083,0.083,0.083,0.082,0.083,0.082,0.083,0.083,0.082,0.083,0.083,0.083,0.08400000000000001,0.083,0.083,0.08400000000000001,0.082,0.083,0.08500000000000001,0.083,0.083,0.082,0.083,0.081,0.083,0.081,0.083,0.082,0.083,0.083,0.082,0.081,0.083,0.083,0.083,0.082,0.082,0.08400000000000001,0.083,0.082,0.083,0.08400000000000001,0.083,0.08400000000000001,0.083,0.08400000000000001,0.08,0.083,0.08500000000000001,0.08,0.082,0.082,0.08,0.08400000000000001,0.082,0.083,0.08400000000000001,0.082,0.083,0.082,0.081,0.082,0.082,0.081,0.082,0.082,0.081,0.082,0.079,0.08400000000000001,0.082,0.083,0.082,0.083,0.08,0.08400000000000001,0.08,0.08400000000000001,0.083,0.082,0.083,0.08],[0.074,0.074,0.073,0.08400000000000001,0.07199999999999999,0.076,0.078,0.082,0.079,0.07199999999999999,0.075,0.07000000000000001,0.078,0.068,0.078,0.08,0.081,0.078,0.074,0.073,0.07099999999999999,0.075,0.077,0.075,0.078,0.074,0.068,0.077,0.077,0.075,0.077,0.075,0.079,0.079,0.075,0.073,0.077,0.073,0.073,0.076,0.078,0.076,0.077,0.074,0.081,0.08,0.074,0.074,0.073,0.078,0.073,0.07099999999999999,0.078,0.073,0.068,0.076,0.078,0.077,0.075,0.075,0.074,0.077,0.07099999999999999,0.08,0.078,0.07099999999999999,0.07000000000000001,0.076,0.074,0.08599999999999999,0.079,0.083,0.075,0.07000000000000001,0.081,0.073,0.08,0.07199999999999999,0.078,0.078,0.08,0.073,0.073,0.075,0.075,0.076,0.08,0.075,0.073,0.078,0.08,0.07199999999999999,0.06900000000000001,0.076,0.077,0.075,0.074,0.073,0.074,0.074,0.078,0.076,0.08,0.078,0.083,0.082,0.077,0.074,0.06900000000000001,0.078,0.07099999999999999,0.077,0.07099999999999999,0.074,0.083,0.064,0.08500000000000001,0.081,0.07099999999999999,0.082,0.073,0.076,0.07199999999999999,0.074,0.08799999999999999,0.074,0.076,0.077,0.075,0.075,0.078,0.081,0.074,0.075,0.074,0.074,0.078,0.076,0.077,0.075,0.07199999999999999,0.076,0.073,0.075,0.08,0.077,0.076,0.08,0.074,0.07000000000000001,0.073,0.074,0.075,0.076,0.076,0.08599999999999999,0.073,0.075,0.076,0.078,0.076,0.081,0.07000000000000001,0.079,0.073,0.076,0.08500000000000001,0.078,0.074,0.075,0.079,0.078,0.075,0.075,0.075,0.083,0.076,0.076,0.08,0.078,0.074,0.081,0.081,0.075,0.082,0.079,0.078,0.079,0.075,0.075,0.076,0.079,0.081,0.075,0.078,0.083,0.077,0.07099999999999999,0.075,0.081,0.076,0.079,0.08,0.076,0.08400000000000001,0.078,0.077,0.075,0.078,0.075,0.078,0.083,0.07199999999999999,0.078,0.078,0.07199999999999999,0.075,0.076,0.074,0.08400000000000001,0.06900000000000001,0.08,0.074,0.078,0.073,0.074,0.075,0.078,0.074,0.075,0.077,0.078,0.078,0.07199999999999999,0.077,0.082,0.076,0.07099999999999999,0.07099999999999999,0.06900000000000001,0.075,0.08799999999999999,0.082,0.076,0.076,0.076,0.075,0.07199999999999999,0.081,0.07000000000000001,0.079,0.08,0.077,0.076,0.078,0.074,0.078,0.076,0.077,0.078,0.077,0.082,0.078,0.078,0.082,0.07099999999999999,0.074,0.076,0.076,0.079,0.079,0.077,0.073,0.079,0.07199999999999999,0.078,0.076,0.078,0.077,0.079,0.076,0.06900000000000001,0.079,0.077,0.081,0.076,0.076,0.07199999999999999,0.073,0.073,0.076,0.08,0.077,0.079,0.073,0.083,0.078,0.077,0.07000000000000001,0.082,0.08,0.074,0.076,0.079,0.076,0.083,0.07199999999999999,0.06900000000000001,0.068,0.073,0.077,0.076,0.082,0.082,0.076,0.07000000000000001,0.07099999999999999,0.076,0.07000000000000001,0.081,0.077,0.082,0.075,0.078,0.076,0.079,0.076,0.08400000000000001,0.075,0.078,0.077,0.067,0.081,0.079,0.078,0.075,0.073,0.079,0.073,0.08,0.077,0.07000000000000001,0.075,0.075,0.075,0.076,0.075,0.078,0.076,0.082,0.075,0.07099999999999999,0.074,0.07199999999999999,0.076,0.078,0.079,0.078,0.073,0.08,0.073,0.074,0.079,0.06900000000000001,0.083,0.076,0.074,0.075,0.078,0.076,0.075,0.079,0.074,0.074,0.076,0.075,0.068,0.082,0.077,0.076,0.081,0.077,0.07000000000000001,0.079,0.08799999999999999,0.08,0.073,0.076,0.075,0.07099999999999999,0.073,0.079,0.07199999999999999,0.07199999999999999,0.079,0.08,0.073,0.079,0.07199999999999999,0.073,0.079,0.07099999999999999,0.078,0.074,0.077,0.075,0.077,0.075,0.078,0.073,0.077,0.081,0.079,0.079,0.076,0.06900000000000001,0.077,0.076,0.074,0.081,0.082,0.079,0.073,0.079,0.08599999999999999,0.078,0.08699999999999999,0.076,0.076,0.078,0.075,0.077,0.079,0.078,0.08,0.078,0.075,0.077,0.082,0.07099999999999999,0.073,0.08500000000000001,0.077,0.081,0.08,0.073,0.083,0.076,0.08599999999999999,0.07099999999999999,0.078,0.074,0.077,0.07199999999999999,0.073,0.074,0.078,0.07199999999999999,0.077,0.077,0.077,0.079,0.07099999999999999,0.081,0.07199999999999999,0.08,0.074,0.079,0.082,0.073,0.073,0.076,0.081,0.077,0.078,0.075,0.06900000000000001,0.079,0.07099999999999999,0.079,0.074,0.076,0.08,0.073,0.07199999999999999,0.07000000000000001,0.07099999999999999,0.078,0.07199999999999999,0.075,0.074,0.081,0.06900000000000001,0.079,0.073,0.08599999999999999,0.08500000000000001,0.07099999999999999,0.075,0.077,0.077,0.07199999999999999,0.07199999999999999,0.076,0.077,0.079,0.081,0.077,0.079,0.083,0.08,0.075,0.073,0.076,0.07199999999999999,0.076,0.078,0.082,0.075,0.073,0.07099999999999999,0.074,0.075,0.075,0.076,0.075,0.08400000000000001,0.076,0.077,0.077,0.08,0.07099999999999999,0.078,0.06900000000000001,0.079,0.07199999999999999,0.07099999999999999,0.073,0.078,0.073,0.07199999999999999,0.077,0.073,0.078,0.073,0.07199999999999999,0.073,0.083,0.075,0.073,0.075,0.079,0.077,0.076,0.082,0.07099999999999999,0.078,0.07099999999999999,0.075,0.073,0.07000000000000001,0.07000000000000001,0.079,0.083,0.077,0.078,0.06900000000000001,0.078,0.078,0.079,0.081,0.078,0.074,0.08,0.08,0.08,0.078,0.074,0.076,0.07199999999999999,0.09,0.078,0.079,0.075,0.076,0.079,0.08,0.082,0.073,0.08,0.079,0.076,0.073,0.075,0.073,0.074,0.081,0.07099999999999999,0.079,0.073,0.073,0.074,0.074,0.077,0.075,0.075,0.081,0.074,0.08400000000000001,0.079,0.081,0.075,0.07099999999999999,0.076,0.076,0.076,0.075,0.077,0.07000000000000001,0.075,0.079,0.073,0.068,0.07000000000000001,0.075,0.074,0.074,0.08699999999999999,0.07000000000000001,0.076,0.078,0.077,0.07199999999999999,0.076,0.077,0.077,0.078,0.083,0.07099999999999999,0.07000000000000001,0.079,0.07099999999999999,0.074,0.077,0.076,0.06900000000000001,0.07099999999999999,0.074,0.074,0.076,0.06900000000000001,0.063,0.083,0.082,0.079,0.08,0.068,0.07099999999999999,0.083,0.077,0.075,0.08400000000000001,0.083,0.078,0.078,0.079,0.075,0.075,0.073,0.079,0.082,0.07199999999999999,0.08400000000000001,0.079,0.07000000000000001,0.076,0.076,0.079,0.08,0.07199999999999999,0.078,0.081,0.075,0.077,0.078,0.082,0.08,0.067,0.076,0.075,0.079,0.073,0.073,0.075,0.07199999999999999,0.077,0.077,0.076,0.074,0.066,0.079,0.08599999999999999,0.078,0.082,0.079,0.073,0.073,0.076,0.076,0.076,0.079,0.077,0.076,0.076,0.079,0.08799999999999999,0.078,0.073,0.083,0.076,0.079,0.077,0.077,0.076,0.075,0.074,0.07000000000000001,0.079,0.079,0.08,0.07199999999999999,0.08,0.076,0.076,0.075,0.074,0.08,0.082,0.08,0.076,0.074,0.07099999999999999,0.073,0.073,0.08,0.079,0.083,0.08,0.078,0.075,0.074,0.066,0.078,0.077,0.076,0.075,0.076,0.079,0.078,0.07199999999999999,0.078,0.081,0.079,0.08,0.08,0.08,0.077,0.083,0.077,0.078,0.074,0.076,0.077,0.074,0.076,0.077,0.078,0.079,0.078,0.079,0.082,0.076,0.076,0.07099999999999999,0.083,0.06900000000000001,0.082,0.079,0.08,0.076,0.078,0.076,0.073,0.078,0.083,0.07099999999999999,0.07099999999999999,0.07099999999999999,0.078,0.081,0.079,0.083,0.074,0.078,0.074,0.079,0.076,0.074,0.078,0.079,0.074,0.076,0.076,0.076,0.082,0.075,0.07000000000000001,0.081,0.079,0.074,0.075,0.073,0.076,0.078,0.078,0.073,0.079,0.075,0.074,0.076,0.075,0.076,0.079,0.074,0.074,0.07199999999999999,0.077,0.07000000000000001,0.08599999999999999,0.07199999999999999,0.073,0.081,0.07099999999999999,0.076,0.07199999999999999,0.081,0.076,0.077,0.08,0.078,0.07000000000000001,0.076,0.06900000000000001,0.076,0.076,0.08,0.077,0.075,0.08500000000000001,0.074,0.076,0.08,0.075,0.08,0.078,0.083,0.075,0.078,0.078,0.081,0.07000000000000001,0.081,0.075,0.076,0.07000000000000001,0.073,0.078,0.078,0.077,0.08,0.07199999999999999,0.074,0.075,0.068,0.076,0.079,0.073,0.076,0.073,0.07099999999999999,0.079,0.07000000000000001,0.08,0.074,0.078,0.074,0.073,0.07099999999999999,0.073,0.07099999999999999,0.083,0.077,0.07099999999999999,0.074,0.076,0.078,0.074,0.08,0.078,0.076,0.081,0.074,0.08500000000000001,0.078,0.074,0.08,0.077,0.075,0.079,0.076,0.075,0.07099999999999999,0.077,0.079,0.077,0.07099999999999999,0.075,0.07199999999999999,0.074,0.074,0.07099999999999999,0.077,0.077,0.074,0.076,0.076,0.078,0.075,0.078,0.076,0.076,0.078,0.082,0.076,0.078,0.074,0.08,0.073,0.076,0.079,0.078,0.073,0.07199999999999999,0.082,0.074,0.074,0.068,0.078,0.068,0.07199999999999999,0.077,0.081,0.074,0.081,0.079,0.081,0.076,0.075,0.081,0.078,0.082,0.07000000000000001,0.079,0.074,0.077,0.08,0.076,0.07199999999999999,0.08,0.07099999999999999,0.083,0.075,0.07199999999999999,0.079,0.077,0.073,0.079,0.082,0.075,0.07000000000000001,0.083,0.077,0.083,0.079,0.068,0.076,0.077,0.076,0.073,0.075]],\"container\":\"<table class=\\\"hover\\\">\\n  <thead>\\n    <tr>\\n      <th>ID_draws<\\/th>\\n      <th>L0_est<\\/th>\\n      <th>a_ctrl_est<\\/th>\\n      <th>a_trt_est<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[0,1,2,3]},{\"name\":\"ID_draws\",\"targets\":0},{\"name\":\"L0_est\",\"targets\":1},{\"name\":\"a_ctrl_est\",\"targets\":2},{\"name\":\"a_trt_est\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\nFinally, we can calculate the parameter estimation errors for all iterations.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_draws_f <- df_draws %>%\n  mutate(\n    err_L0              = (L0_est30-L0_est)/L0_est30,\n    err_a_ctrl          = (a_ctrl_est-a_ctrl_est30)/a_ctrl_est30,\n    err_a_trt           = (a_trt_est-a_trt_est30)/a_trt_est30,\n    effect              = a_trt_est/a_ctrl_est,\n    err_effect          = (effect-effect_est30)/effect_est30,\n    err_L0sd            = (L0sd_est-L0sd_est30)/L0sd_est30,\n    err_asd_ctrl        = (asd_ctrl_est-asd_ctrl_est30)/asd_ctrl_est30,\n    err_asd_trt         = (asd_trt_est-asd_trt_est30)/asd_trt_est30,\n    effectsd            = asd_trt_est/asd_ctrl_est,\n    err_effectsd        = (effectsd-effectsd_est30)/effectsd_est30,\n    bol_contrary_ccl_mu = (a_trt_est>a_ctrl_est),\n    bol_contrary_ccl_sd = (asd_trt_est<asd_ctrl_est)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nalpha_stat <- 0.7\nalpha_expo <- 0.3\nlinevertic <- 1.2\nalpha_dens <- 0.5\n\nx_min_err    <- -0.3*100\nx_max_err    <- -x_min_err\nx_min_errsd  <- -4.4*100\nx_max_errsd  <- -x_min_errsd\nbin_width    <- 0.05*100\nbin_width_sd <- 0.15*100\n\nsizetitle <- 10\n\nplot_L0 <- ggplot(\n  data=df_draws_f, \n  aes(x=err_L0*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width,\n    color=Nord_polar[4], \n    fill = Nord_polar[4], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0, , \n    linetype=\"dashed\"\n    )+\n  xlim(\n    x_min_err, \n    x_max_err\n    )+\n  labs(\n    x=TeX(r\"( Error on $L0_{\\mu}$ (%) )\"), \n    y=\"\"\n    )+\n  theme_bw(sizetitle)\n\nplot_a_ctrl <- ggplot(\n  data=df_draws_f, \n  aes(x=err_a_ctrl*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width,\n    color=pal_col[1], \n    fill = pal_col[1], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0, \n    linetype=\"dashed\"\n    )+\n  labs(\n    x=TeX(r\"( Error on $a_{non\\ exposed,\\mu}$ (%) )\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_err, \n    x_max_err\n    )+\n  theme_bw(sizetitle)\n\nplot_a_trt <- ggplot(\n  data=df_draws_f, \n  aes(x=err_a_trt*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width,\n    color=pal_col[2], \n    fill = pal_col[2], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0, \n    linetype=\"dashed\"\n    )+\n  labs(\n    x=TeX(r\"( Error on $a_{exposed,\\mu}$ (%) )\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_err, \n    x_max_err\n    )+\n  theme_bw(sizetitle)\n\nplot_effect <- ggplot(\n  data=df_draws_f, \n  aes(x=err_effect*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width,\n    color=Nord_polar[1], \n    fill = Nord_polar[1], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0, \n    linetype=\"dashed\"\n    )+\n  labs(\n    x=bquote(\"Error on the estimated mean effect (%)\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_err, \n    x_max_err\n    )+\n  theme_bw(sizetitle)\n\nplot_L0sd <- ggplot(\n  data=df_draws_f, \n  aes(x=err_L0sd*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width_sd,\n    color=Nord_polar[4], \n    fill = Nord_polar[4], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0, \n    linetype=\"dashed\"\n    )+\n  labs(\n    x=TeX(r\"( Error on $L0_{\\sigma}$ (%) )\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_errsd, \n    x_max_errsd\n    )+\n  theme_bw(sizetitle)\n\nplot_asd_ctrl <- ggplot(\n  data=df_draws_f, \n  aes(x=err_asd_ctrl*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width_sd,\n    color=pal_col[1], \n    fill = pal_col[1], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0, \n    linetype=\"dashed\"\n    )+\n  labs(\n    x=TeX(r\"( Error on $a_{non\\ exposed,\\sigma}$ (%) )\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_errsd, \n    x_max_errsd\n    )+\n  theme_bw(sizetitle)\n\nplot_asd_trt <- ggplot(\n  data=df_draws_f, \n  aes(x=err_asd_trt*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width_sd,\n    color=pal_col[2], \n    fill = pal_col[2], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0,\n    linetype=\"dashed\"\n    )+\n  labs(\n    x=TeX(r\"( Error on $a_{exposed,\\sigma}$ (%) )\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_errsd, \n    x_max_errsd\n    )+\n  theme_bw(sizetitle)\n\nplot_effectsd <- ggplot(\n  data=df_draws_f, \n  aes(x=err_effectsd*100)\n  )+\n  geom_histogram(\n    binwidth=bin_width_sd,\n    color=Nord_polar[1], \n    fill = Nord_polar[1], \n    alpha=alpha_expo\n    )+\n  geom_vline(\n    xintercept = 0,\n    linetype=\"dashed\"\n    )+\n  labs(\n    x=bquote(\"Error on the estimated effect\\n on individual variation (%)\"), \n    y=\"\"\n    )+\n  xlim(\n    x_min_errsd, \n    x_max_errsd\n    )+\n  theme_bw(sizetitle)\n\nplot <- plot_L0 + plot_L0sd + plot_a_ctrl + plot_asd_ctrl+ plot_a_trt+ plot_asd_trt + plot_effect + plot_effectsd +\n  plot_layout(\n    ncol=2, \n    guides=\"collect\"\n    ) & \n  theme(\n    legend.position = \"right\", \n    title=element_text(size=sizetitle, face=\"bold\"), \n    axis.title.x = element_text(face=\"plain\")\n    )\nplot\n```\n\n::: {.cell-output-display}\n![Error percentage on the different model parameters and the estimated effect on mean growth rate and its individual variation obtained with a bootstrap (n = 1000) with 8 or 4 replicates for the non-exposed and exposed conditions respectively (type M errors). One replicate represents 10 randomly chosen individuals. The bin width for estimated means and the error on the estimated individual variations are 5% and 15% respectively. The median of the distributions are 3.7% and 16.3% respectively.](E_Less_replicates_files/figure-html/fig-errOECDboot-1.png){#fig-errOECDboot width=576}\n:::\n:::\n\n\n\n::: {#tbl-resOECDsummary .cell tbl-cap='Statistical summary of the parameters distributions (in % or error)'}\n\n```{.r .cell-code}\ndf_res_draws <- df_draws_f %>%\n  pivot_longer(\n    cols = -ID_draws, # Garde ID_draws intact\n    names_to = \"variable\",\n    values_to = \"value\"\n  ) %>%\n  group_by(variable) %>%\n  summarise(\n    median = median(value)*100,\n    mean = mean(value)*100,\n    Q2.5 = quantile(value, 0.025)*100,\n    Q97.5 = quantile(value, 0.975)*100\n  )\n\nselected_var <- c(\"err_L0\", \"err_a_ctrl\", \"err_a_trt\", \"err_L0sd\", \"err_asd_ctrl\", \"err_asd_trt\", \"err_effect\", \"err_effectsd\")\n\ndf_res_draws <- df_res_draws |> \n  filter(variable %in% selected_var)\n\ndf_res_draws_show <- df_res_draws|> \n  mutate(across(where(is.numeric), ~ signif(.x, digits = 2))) |> \n  datatable(\n  options = list(dom = 't'), \n  class=\"hover\"\n  ) \ndf_res_draws_show\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-6b9c1d2635660699a54a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6b9c1d2635660699a54a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[\"err_L0\",\"err_L0sd\",\"err_a_ctrl\",\"err_a_trt\",\"err_asd_ctrl\",\"err_asd_trt\",\"err_effect\",\"err_effectsd\"],[-2.1,-70,-0.42,2.2,-59,-52,2.8,18],[-2.1,-70,-0.42,2.5,-59,-53,2.9,34],[-4,-89,-3.3,-7.2,-85,-87,-7.6,-71],[-0.23,-48,2.3,12,-28,-17,14,260]],\"container\":\"<table class=\\\"hover\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>variable<\\/th>\\n      <th>median<\\/th>\\n      <th>mean<\\/th>\\n      <th>Q2.5<\\/th>\\n      <th>Q97.5<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"variable\",\"targets\":1},{\"name\":\"median\",\"targets\":2},{\"name\":\"mean\",\"targets\":3},{\"name\":\"Q2.5\",\"targets\":4},{\"name\":\"Q97.5\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\nmean_err_effect <- round(subset(df_res_draws, variable == \"err_effect\")$mean,2)\nmean_err_effectsd <- round(subset(df_res_draws, variable == \"err_effectsd\")$mean,2)\n```\n:::\n\n::: {#tbl-resOECDind .cell tbl-cap='Percentage of iteration for which the error on the different model parameters and effects on mean growth rate and its individual variation is inferior to the given x value.'}\n\n```{.r .cell-code}\nx = c(.05,.10,.25, .50, .75, .90, .95, 1, 2, 3, 4)\n\ndf_err <- data.frame(x = x) %>%\n  mutate(\n    L0       = map_dbl(x, ~ sum(abs(df_draws_f$err_L0) <= .x) / 1000*100),\n    a_ctrl   = map_dbl(x, ~ sum(abs(df_draws_f$err_a_ctrl) <= .x) / 1000*100),\n    a_trt    = map_dbl(x, ~ sum(abs(df_draws_f$err_a_trt) <= .x) / 1000*100),\n    asd_ctrl = map_dbl(x, ~ sum(abs(df_draws_f$err_asd_ctrl) <= .x) / 1000*100),\n    asd_trt  = map_dbl(x, ~ sum(abs(df_draws_f$err_asd_trt) <= .x) / 1000*100),\n    effect   = map_dbl(x, ~ sum(abs(df_draws_f$err_effect) <= .x) / 1000*100),\n    effectsd = map_dbl(x, ~ sum(abs(df_draws_f$err_effectsd) <= .x) / 1000*100)\n  )\n\nl_df_err <- length(df_err)\n\ndf_err_show <- df_err |> \n  datatable(\n    options = list(dom = 't'), \n    class=\"hover\", \n    rownames=FALSE\n    )  |> \n  formatRound(columns = 1:length(df_err), digits = 1)\n\ndf_err_show\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e4826f8e579c472e82eb\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e4826f8e579c472e82eb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[0.05,0.1,0.25,0.5,0.75,0.9,0.95,1,2,3,4],[99.8,100,100,100,100,100,100,100,100,100,100],[99.90000000000001,100,100,100,100,100,100,100,100,100,100],[62.3,92.7,100,100,100,100,100,100,100,100,100],[0,0.2,2,26.7,85.2,99.90000000000001,100,100,100,100,100],[0.7000000000000001,1.4,6.4,45.4,87.2,99,99.90000000000001,100,100,100,100],[58.3,90.7,100,100,100,100,100,100,100,100,100],[5.600000000000001,10.1,30.9,60.7,76.09999999999999,83.5,84.3,85.2,95,98.59999999999999,99.90000000000001]],\"container\":\"<table class=\\\"hover\\\">\\n  <thead>\\n    <tr>\\n      <th>x<\\/th>\\n      <th>L0<\\/th>\\n      <th>a_ctrl<\\/th>\\n      <th>a_trt<\\/th>\\n      <th>asd_ctrl<\\/th>\\n      <th>asd_trt<\\/th>\\n      <th>effect<\\/th>\\n      <th>effectsd<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"t\",\"columnDefs\":[{\"targets\":0,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":1,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":7,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 1, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[0,1,2,3,4,5,6,7]},{\"name\":\"x\",\"targets\":0},{\"name\":\"L0\",\"targets\":1},{\"name\":\"a_ctrl\",\"targets\":2},{\"name\":\"a_trt\",\"targets\":3},{\"name\":\"asd_ctrl\",\"targets\":4},{\"name\":\"asd_trt\",\"targets\":5},{\"name\":\"effect\",\"targets\":6},{\"name\":\"effectsd\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\",\"options.columnDefs.5.render\",\"options.columnDefs.6.render\",\"options.columnDefs.7.render\"],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\nPer_sample_err_effect_5 <- subset(df_err, x == 0.05)$effect\nPer_sample_err_effect_10 <- subset(df_err, x == 0.10)$effect\nnb_err_effectsd_sup100 <- (100-subset(df_err, x == 1.0)$effectsd)/100*1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCount_mu_higher_in_exposed <- length(subset(df_draws_f, bol_contrary_ccl_mu==TRUE)$ID_draws)\nCount_sd_lower_in_exposed <- length(subset(df_draws_f, bol_contrary_ccl_sd==TRUE)$ID_draws)\n\nPer_contrary_ccl_mu <- Count_mu_higher_in_exposed/1000*100\nPer_contrary_ccl_sd <- Count_sd_lower_in_exposed/1000*100\n```\n:::\n\n\n\n\n\nWhen compared to our experimental design using 30 individuals, the results of this bootstrap indicate that the population-level effect would still be well estimated with deviations not exceeding Â±5% and 10% in 58.3% and 90.7% of the samples, respectively, but with an average overestimation of 2.92%. However, estimating individual-level variability proved much more challenging, with errors reaching up to 200% in 148 samples. This suggests that the variation in growth rate among individuals would likely be poorly captured, with the effect often underestimated by approximately 50%, and in some cases, overestimated by more than 200%. We also note that the direction of the effect was misestimated in 7.1% of cases for the mean effect and 2.7% for individual variation (type S error).\n\nThese simulations of an OECD protocol identified important limitations of simplified traditional approaches, particularly in tests with a single control and one concentration. By simulating fewer replicates with measurements at the replicate scale, we demonstrated that small studies may fail to capture the full range of inter-individual differences and, in some cases, increase the risk of misinterpreting the direction of a substanceâs effect. For example, in a hypothetical scenario of a simplified design of the OECD earthworm reproduction test with only one concentration tested, estimation errors could have led to incorrect conclusions about the effect direction in a non negligible percentage of cases, suggesting a beneficial effect. These results raise concerns about the robustness of underpowered studies with limited replicates and tested doses for environmental risk assessment, emphasizing the value of adequately sized experiments to improve the reliability of conclusions.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}